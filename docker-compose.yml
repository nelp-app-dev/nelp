version: '3.9'
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        - SERVICE=api
    container_name: api
    networks:
      app-network:
    volumes:
      - /nelp-api/node_modules
  catalog:
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        - SERVICE=catalog
    container_name: catalog
    depends_on:
      - postgres
    networks:
      app-network:
    volumes:
      - /nelp-catalog/node_modules
      - catalog-uploads:/nelp-catalog/uploads
  cart:
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        - SERVICE=cart
    container_name: cart
    depends_on:
      - redis
    networks:
      app-network:
    volumes:
      - /nelp-cart/node_modules
  admin:
    build:
      context: .
      dockerfile: Dockerfile.client
      args:
        - SERVICE=admin
    container_name: admin
    networks:
      app-network:
    volumes:
      - /nelp-admin/node_modules
  web-sales:
    build:
      context: .
      dockerfile: Dockerfile.client
      args:
        - SERVICE=web-sales
    container_name: web-sales
    networks:
      app-network:
    volumes:
      - /nelp-web-sales/node_modules
  redis:
    image: 'redis:alpine'
    container_name: redis
    command: ['redis-server', '--appendonly yes']
    volumes:
      - redis-data:/data
    networks:
      app-network:
  postgres:
    image: 'postgres:13-alpine'
    container_name: postgres
    environment:
      - POSTGRES_USER=nelp
      - POSTGRES_PASSWORD=nelp_pg_3718
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      app-network:
  nginx:
    image: 'nginx:1-alpine'
    container_name: nginx
    ports:
      - 3737:3737
      - 8000:8000
      - 8001:8001
      - 8002:8002
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./config/cert.crt:/etc/nginx/ssl/cert.crt
      - ./config/private.key:/etc/nginx/ssl/private.key
      - catalog-uploads:/etc/nginx/uploads
    networks:
      app-network:
    depends_on:
      - api
volumes:
  redis-data:
  postgres-data:
  catalog-uploads:
networks:
  app-network:
